{"version":3,"sources":["components/Player.js","pages/Home.js","pages/Player.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Player","id","firstName","lastName","headshot","numMentions","sentimentScore","polarityScore","Row","Col","md","className","src","to","toString","replace","followCursor","title","position","trigger","toFixed","style","fontSize","Home","props","state","players","error","isLoading","max","limit","offset","window","onscroll","debounce","innerHeight","document","documentElement","scrollTop","offsetHeight","incrementPage","this","setState","fetchPlayers","fetch","then","res","json","console","log","map","first_name","last_name","num_mentions","sentiment_score","polarity_score","React","Component","player","match","params","fetchPlayer","mentions","sort","a","b","Math","abs","sentiment","upvotes","slice","index","sentence","key","color","marginLeft","substr","Search","fetchAutoComplete","items","value","onChange","location","href","itemToString","item","getInputProps","getItemProps","getMenuProps","getLabelProps","isOpen","inputValue","highlightedIndex","selectedItem","Form","Control","type","placeholder","filter","toLowerCase","includes","paddingLeft","minWidth","backgroundColor","fontWeight","App","Container","alt","path","exact","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71494d00.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Tooltip } from \"react-tippy\";\n\nexport const Player = ({\n  id,\n  firstName,\n  lastName,\n  headshot,\n  numMentions,\n  sentimentScore,\n  polarityScore\n}) => {\n  return (\n    <div>\n      <Row>\n        <Col md={3}>\n          <img className=\"headshot\" src={headshot}></img>\n        </Col>\n        <Col md={5}>\n          <div>\n            <h1 className=\"player-name\">\n              <Link to={`/players/${id}`}>\n                {\" \"}\n                {firstName} {lastName}\n              </Link>\n            </h1>\n            <h2>\n              {formatNumber(numMentions)} <small>mentions</small>\n            </h2>\n          </div>\n        </Col>\n        <Col md={2}>\n          <Tooltip\n            className=\"tool-tip\"\n            followCursor={true}\n            title=\"Sentiment score is a weighted average of the sentiment associated with all mentions of a given player. Comments with a larger number of upvotes matter more.\"\n            position=\"bottom\"\n            trigger=\"mouseenter\"\n          >\n            {\" \"}\n            <span className=\"score sentiment-score\">\n              {(sentimentScore * 100).toFixed(1)}\n              <span style={{ fontSize: \"1.4rem\" }}>ss</span>\n            </span>\n          </Tooltip>\n        </Col>\n        <Col md={2}>\n          <Tooltip\n            className=\"tool-tip\"\n            followCursor={true}\n            title=\"Polarity score is a function of how controversial the mentions of a player are. Players with more higher polarity mentions (either high upvotes or high downvotes) are more polar.\"\n            position=\"bottom\"\n            trigger=\"mouseenter\"\n          >\n            <p className=\"score polarity-score\">\n              {(polarityScore * 100).toFixed(1)}\n              <span style={{ fontSize: \"1.4rem\" }}>ps</span>\n            </p>\n          </Tooltip>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nfunction formatNumber(num) {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n}\n","import React from \"react\";\nimport { debounce } from \"lodash\";\nimport { Col } from \"react-bootstrap\";\nimport { Player } from \"../components/Player\";\n\nexport class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      error: false,\n      isLoading: false,\n      max: false,\n      limit: 20,\n      offset: 0\n    };\n    window.onscroll = debounce(() => {\n      const {\n        state: { error, isLoading, max }\n      } = this;\n      if (error || isLoading || max) return;\n      else if (\n        window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight\n      ) {\n        this.incrementPage();\n      }\n    }, 100);\n  }\n\n  incrementPage() {\n    this.setState({\n      offset: this.state.offset + 1\n    });\n    this.fetchPlayers();\n  }\n\n  fetchPlayers() {\n    this.setState({ isLoading: true }, () => {\n      fetch(\n        `https://nba-rank.herokuapp.com/players?offset=${this.state.offset}`\n      )\n        .then(res => res.json())\n        .then(res => {\n          console.log(\"hello\");\n          console.log(res);\n          this.setState({\n            players: [...this.state.players, ...res.players],\n            isLoading: false\n          });\n        });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchPlayers();\n  }\n\n  render() {\n    const { players } = this.state;\n    return players.map(\n      ({\n        id,\n        first_name,\n        last_name,\n        headshot,\n        num_mentions,\n        sentiment_score,\n        polarity_score\n      }) => {\n        return (\n          <div>\n            <Player\n              id={id}\n              firstName={first_name}\n              lastName={last_name}\n              headshot={headshot}\n              numMentions={num_mentions}\n              sentimentScore={sentiment_score}\n              polarityScore={polarity_score}\n            />\n            <Col md={12}>\n              <hr />\n            </Col>\n          </div>\n        );\n      }\n    );\n  }\n}\n","import React from \"react\";\nimport { debounce } from \"lodash\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Player as PlayerComponent } from \"../components/Player\";\n\nexport class Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player: {},\n      error: false,\n      isLoading: true\n    };\n  }\n\n  fetchPlayer() {\n    this.setState({ isLoading: true }, () => {\n      const { id } = this.props.match.params;\n      fetch(`https://nba-rank.herokuapp.com/players/${id}`)\n        .then(res => res.json())\n        .then(res => {\n          this.setState({\n            player: res,\n            isLoading: false\n          });\n        });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchPlayer();\n  }\n\n  render() {\n    let {\n      id,\n      first_name,\n      last_name,\n      headshot,\n      num_mentions,\n      sentiment_score,\n      polarity_score,\n      mentions\n    } = this.state.player;\n    console.log(mentions);\n    if (this.state.isLoading) {\n      return <h1>Loading...</h1>;\n    }\n    return (\n      <div>\n        <PlayerComponent\n          id={id}\n          firstName={first_name}\n          lastName={last_name}\n          headshot={headshot}\n          numMentions={num_mentions}\n          sentimentScore={sentiment_score}\n          polarityScore={polarity_score}\n        />\n        <Col md={12}>\n          <hr />\n        </Col>\n        <h1>Top Mentions</h1>\n        <Row>\n          <Col md={12}>\n            {mentions\n              .sort(\n                (a, b) =>\n                  Math.abs(b.sentiment) * (1.01 ^ Math.abs(b.upvotes)) -\n                  Math.abs(a.sentiment) * (1.01 ^ Math.abs(a.upvotes))\n              )\n              .slice(0, 5)\n              .map(({ sentence, sentiment, upvotes }, index) => {\n                return (\n                  <div className=\"mention\" key={index}>\n                    <span className=\"mention-scores\">\n                      <span> {upvotes} upvotes</span>\n                      <span\n                        style={{\n                          color: sentiment < 0 ? \"red\" : \"green\",\n                          marginLeft: \"20px\"\n                        }}\n                      >\n                        {(sentiment * 100).toFixed(1)}\n                        <span style={{ fontSize: \"1.2rem\" }}>ss</span>\n                      </span>\n                    </span>\n                    <br></br>\n                    <span className=\"mention-quote\">\n                      \"...{sentence.substr(0, 200)}...\"\n                    </span>\n                  </div>\n                );\n              })}\n          </Col>\n        </Row>\n        <Col md={12}>\n          <hr></hr>\n        </Col>\n        <h1>Most Negative Mentions</h1>\n        <Row>\n          <Col md={12}>\n            {mentions\n              .sort((a, b) => a.sentiment - b.sentiment)\n              .slice(0, 5)\n              .map(({ sentence, sentiment, upvotes }, index) => {\n                return (\n                  <div className=\"mention\" key={index}>\n                    <span className=\"mention-scores\">\n                      <span> {upvotes} upvotes</span>\n                      <span\n                        style={{\n                          color: sentiment < 0 ? \"red\" : \"green\",\n                          marginLeft: \"20px\"\n                        }}\n                      >\n                        {(sentiment * 100).toFixed(1)}\n                        <span style={{ fontSize: \"1.2rem\" }}>ss</span>\n                      </span>\n                    </span>\n                    <br></br>\n                    <span className=\"mention-quote\">\n                      \"...{sentence.substr(0, 200)}...\"\n                    </span>\n                  </div>\n                );\n              })}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Downshift from \"downshift\";\n\nexport class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { players: [], isLoading: false };\n  }\n\n  componentDidMount() {\n    this.fetchAutoComplete();\n  }\n\n  fetchAutoComplete() {\n    this.setState({ isLoading: true }, () => {\n      fetch(`https://nba-rank.herokuapp.com/autocomplete`)\n        .then(res => res.json())\n        .then(res => {\n          this.setState({\n            players: res,\n            isLoading: false\n          });\n        });\n    });\n  }\n\n  render() {\n    const items = this.state.players.map(({ first_name, last_name, id }) => {\n      if (first_name) return { value: first_name + \" \" + last_name, id };\n      else return { value: last_name, id };\n    });\n    return (\n      <Downshift\n        onChange={({ id }) => (window.location.href = `/players/${id}`)}\n        itemToString={item => (item ? item.value : \"\")}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          isOpen,\n          inputValue,\n          highlightedIndex,\n          selectedItem\n        }) => (\n          <div>\n            <Form.Control\n              className=\"search\"\n              type=\"search\"\n              placeholder=\"Search\"\n              {...getInputProps()}\n            ></Form.Control>\n            <div {...getMenuProps()}>\n              {isOpen\n                ? items\n                    .filter(\n                      item =>\n                        !inputValue ||\n                        item.value\n                          .toLowerCase()\n                          .includes(inputValue.toLowerCase())\n                    )\n                    .slice(0, 5)\n                    .map((item, index) => (\n                      <div\n                        {...getItemProps({\n                          key: item.value,\n                          index,\n                          item,\n                          style: {\n                            paddingLeft: \"10px\",\n                            minWidth: \"100%\",\n                            backgroundColor:\n                              highlightedIndex === index\n                                ? \"lightgrey\"\n                                : \"white\",\n                            fontWeight:\n                              selectedItem === item ? \"bold\" : \"normal\"\n                          }\n                        })}\n                      >\n                        {item.value}\n                      </div>\n                    ))\n                : null}\n            </div>\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Home } from \"./pages/Home\";\nimport { Player } from \"./pages/Player\";\nimport { Search } from \"./components/Search\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Container>\n          <Row>\n            <Col md={6}>\n              <h1 className=\"header\">\n                <img\n                  className=\"logo\"\n                  alt=\"logo\"\n                  src=\"https://styles.redditmedia.com/t5_2qo4s/styles/communityIcon_1podsfdai4301.png\"\n                ></img>\n                <Link to=\"/\">nba-rank</Link>\n              </h1>\n            </Col>\n            <Col md={6}>\n              <Search />\n            </Col>\n          </Row>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/players/:id\" component={Player}></Route>\n        </Container>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}